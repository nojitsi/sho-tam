datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id   Int    @id @default(autoincrement())
  name String

  email         String  @unique

  avatar String?

  role  UserRole  @default(USER)
  posts TradeAd[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TradeAdImage {
  id   Int    @id @default(autoincrement())
  name String
  path String

  TradeAd   TradeAd? @relation(fields: [tradeAdId], references: [id])
  tradeAdId Int
}

model TradeAd {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  price       String  
  contact     String
  views       Int    @default(0)
  approoved   Boolean @default(false)

  location   Location @relation(fields: [locationId], references: [id])
  locationId Int
  locationPath String

  author   User @relation(fields: [authorId], references: [id])
  authorId Int

  type       GoodTypes @relation(fields: [goodTypeId], references: [id])
  goodTypeId Int

  kit   String[]
  images TradeAdImage[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model GoodTypes {
  id       Int       @id @default(autoincrement())
  name     String
  imageUrl String
  TradeAd  TradeAd[]
}

model Location {
  id   Int    @id @default(autoincrement())
  name String

  childs   Location[] @relation("location")
  parent   Location?  @relation(fields: [parentId], references: [id], name: "location")
  parentId Int?

  path String

  TradeAd TradeAd[]
}
